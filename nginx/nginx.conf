# nginx/nginx.conf

events {}

http {
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name www.e-ic.tech;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name www.e-ic.tech;

        ssl_certificate /etc/nginx/ssl/my-app.crt;
        ssl_certificate_key /etc/nginx/ssl/my-app.key;

        # Include the issuer certificate (replace 'issuer.crt' with the actual file name)
        ssl_trusted_certificate /etc/nginx/ssl/ca.crt;

        # SSL protocols and ciphers
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

        # Enable OCSP stapling for better security
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        # Disable OCSP stapling
        # ssl_stapling off;
        # ssl_stapling_verify off;

        # SSL session cache
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Enable HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Add security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        location ~ ^/api/(?<endpoint>.+)$ {
            proxy_pass http://backend:8080/$endpoint;
        }

        location / {
            proxy_pass http://frontend:80;
        }
    }
}
